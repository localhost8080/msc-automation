#!/usr/bin/env python
import sys
import os
import subprocess

def run(cmd, logfile):
    p = subprocess.Popen(cmd, shell=True, universal_newlines=True, stdout=logfile)
    p.wait()
    return p

def runTest(scanner, logname):
    with open(logname, "a") as log:
        print >> log, "loading scanner: " + scanner
        a_ret = run(scanner, log)

def main():
	__location__ = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))
	
	reports = os.path.join(__location__, 'reports/wapiti')

	logfile = os.path.join(reports, 'wapiti.txt')

	cookiefile = os.path.join(__location__,'cookie.txt')

	jsoncookiefile = os.path.join(__location__,'cookie.json')

	# we cant cleanup after, due to the way subprocess forks, so we will do a cleanup before
# we cant cleanup after, due to the way subprocess forks, so we will do a cleanup before
	cleanup = subprocess.Popen(os.path.join(__location__,'cleanup'), shell=True)
	cleanup.wait()
	
	authenticate = subprocess.Popen(os.path.join(__location__,'authenticate-dvwa'), shell=True)
	authenticate.wait()

	with open(logfile, "w") as log:
		print >> log, "Scan results"

	with open(os.path.join(__location__,'urllist.txt'), "r") as urlfile:
		for url in urlfile:
			print url
			url = url.rstrip('\r\n')
			scanner = ['wapiti', url, '-s', url, '--scope', 'page', '--cookie', jsoncookiefile, '--proxy', 'http://127.0.0.1:8080', '-o', logfile, '--format', 'txt', '--module', '"-all,sql,blindsql"']
			test = runTest(scanner, logfile)

if __name__ == '__main__':
	main()
